---
title: "Chapter 8 Parametric Models"
format: 
    html:
        number-sections: true
---

## Proportional Hazard Models

$$h_1(t) = ch_0(t) \text{ for some c > 0 , and all t > 0}$$

In `eha`, available distributions in `phref` include:

- _Weibull_
- _Extreme value_
- _Gompertz_

in `pch` and `tpch`:

- _piecewise constant hazards_

### the Weibull model

$$h(t; p, \lambda) = \frac p\lambda(\frac t \lambda)^{p-1},  \text{ t, p, }\lambda \gt 0$$

$$h(t;x,\lambda, p, \beta) = \frac p\lambda(\frac t \lambda)^{p-1} \exp(\beta x),  t \gt 0$$

This is the function `phreg` fits by default.

### the Gompertz distribution

$$ h(t;p, r) = p\exp(rt), p,t \gt 0; -\infty \lt r \lt \infty$$

and the proportional hazard model is

$$h(t;x, p, r, \beta) = pe^{rt}e^{\beta x}, t \gt 0$$

### Application

```{r}
library(eha)
data("oldmort")
olm <- oldmort
head(olm)
```

fit the weibull model
```{r phreg_weibull}
fit <- phreg(Surv(enter - 60, exit - 60, event) ~ sex + region, dist = "weibull"
    , data = oldmort)
summary(fit)
```

### the parametric model with left truncation

### the piecewise constant proportional hazards model

`pch` the piecewise constant proportional hazard model

```{r}
# totpch
olmtab <- toTpch(Surv(enter, exit, event) ~ sex + region, 
    cuts = c(seq(60, 85, by=5), 100), data = oldmort)
head(olmtab)
```

```{r}
fit.tpch <- tpchreg(oe(event, exposure) ~ sex + region, data = olmtab
    , time = age)
summary(fit.tpch)
```

### testing the proportional hazards assumption

```{r}
fit.tpch <- tpchreg(oe(event, exposure) ~ age*(sex + region), data = olmtab)
(dr <- drop1(fit.tpch, test = "Chisq"))
```

```{r}
fit.str <- tpchreg(oe(event, exposure) ~ sex + strata(region), time = age 
    , data = olmtab)
fit.str
```

using another dataset

```{r}
sp <- swepop
sp$deaths <- swedeaths$deaths
head(sp)
```

```{r}
fit.swr <- tpchreg(oe(deaths, pop) ~ strata(sex) + I(year - 2000), last = 101
    , time = age, data = sp)

rr.sex <- exp(tpchreg(oe(deaths, pop) ~ sex + I(year - 2000)
    , last = 101
    , time = age
    , data = sp)$coefficients[1])

cumhaz <- hazards(fit.swr, cum = TRUE)
haz <- hazards(fit.swr, cum = FALSE)
```

```{r}
op <- par(mfrow = c(1, 2))
plot(haz$x, haz$y[2,]/haz$y[1,], type = "l", ylim=c(1, 3), xlab = "Age", ylab = "Hazard Ratio")
abline(h=1)
abline(h=rr.sex, lty=2)
text(5, 1.65, "PH")
plot(cumhaz$x, cumhaz$y[2,]/cumhaz$y[1,], type = "l", ylim=c(1, 3), xlab = "Age", ylab = "Cumulative Hazard Ratio")
abline(h=1)
abline(h=rr.sex, lty=2)
text(5, 1.65, "PH")
```

### Choosing the best parametric proportional hazards model

```{r}
library(eha)
om <- oldmort
fm <- as.formula("Surv(enter, exit, event) ~ sex + region")
fm0 <- as.formula("Surv(enter-60, exit-60, event) ~ sex + region")
fit.w <- phreg(fm, data=oldmort)
o.w <- extractAIC(fit.w)[2]

fit.w0 <- phreg(fm0, data=oldmort)
o.w0 <- extractAIC(fit.w0)[2]
```

## Accelerated Failure Time Models

- Group 0 : $P(T \geq t) = S_0(t)$ (control group)
- Group 1 : $P(T \geq t) = S_0(\phi t)$ (treatment group)

### The AFT regression model

- $T$ has survivor function $S(t)$ 
- $T_c = \frac T c$ has survivor function $S(ct)$ 
- if $Y=\log(T)$ and $Y_c=\log(T_c)$

the following holds:

$$Y_c = Y - \log(c)$$

with $Y=\epsilon$, $Y_c=Y$ and $\log(c) = -\beta x$ then
$$Y=\beta x + \epsilon$$

### AFT modeling in R

```{r aft}
fit.w1 <- aftreg(fm0, id=id, data=oldmort)
```

### The Lognormal model
```{r}
library(eha)
library(tidyverse)
f12 <- fert %>% filter(parity==1)
head(f12)
```

```{r lognormal}
fit.lognorm <- aftreg(Surv(next.ivl, event) ~ age + I(year - 1860) + ses, 
    data=f12, dist = 'lognormal')
summary(fit.lognorm)
```

```{r lifeExp}
fit.lognorm2 <- aftreg(Surv(next.ivl, event) ~ age + I(year - 1860) + ses,
    data=f12, dist = 'lognormal', param = "lifeExp")
summary(fit.lognorm2)
```

```{r hazardPlot}
plot(fit.lognorm, fn='haz', main='', xlab='Years', ylab='hazards')
```

### The Loglogistic model

```{r loglogistic}
fit.loglogistic <- aftreg(Surv(next.ivl, event) ~ age + I(year - 1860) + ses,
    data=f12, dist = 'loglogistic')
summary(fit.loglogistic)
```

```{r hazardPlot_loglogistic}
plot(fit.loglogistic, fn='haz', main='', xlab='Years', ylab='hazards')
```

### The Gomperts model

the canonical parameterization in the package `eha`

the standard definition of the Gompertz hazard function is 

$$h_r(t; (\alpha, \beta)) = \alpha \exp(\beta t), t \gt 0; \alpha \gt 0, -\infty \lt \sigma \lt \infty$$

the canonical definition of the Gompertz hazard function is given by 

$$h_c(t;(\tau, \sigma)) = \frac \tau \sigma \exp(\frac t \sigma), t \gt 0; \tau , \sigma \gt 0$$

## Proportional Hazards or AFT Model?

comparing the AIC of the models

## Discrete Time Models

### Data Formats: wide and long

```{r wideToLong}
data(oldmort)

om <- oldmort[oldmort$enter==60, ]
om <- age.window(om, c(60, 70)) 

om$m.id <- om$f.id <- om$imr.birth <- om$birthplace <- NULL

om$birthdate <- om$ses.50 <- 50

om1 <- survival::survSplit(om, cut = 61:69, start = 'enter', end = 'exit'
                           , event = 'event', episode = 'agegrp')

om1$agegrp <- factor(om1$agegrp, labels = 60:69)

om1 <- om1[order(om1$id, om1$enter), ]

rownames(om1) <- 1:NROW(om1)

om1$id <- as.numeric(as.factor(om1$id))

head(om1)
```

```{r}
recs <- tapply(om1$id, om1$id, length)
barplot(table(recs))
```
```{r}
om1$exit <- om1$enter <- NULL
om2 <- reshape(om1, v.names = c('event', 'civ', 'region')
               , idvar = 'id', direction = 'wide'
               , timevar = 'agegrp')
head(om2)
names(om2)
```
```{r}
om3 <- reshape(om2, direction = 'long', idvar = 'id', varying = 5:34)
head(om3)
```
```{r}
om3 <- om3[order(om3$id, om3$time), ]
om3[1:11, ]
```

```{r}
om3 <- om3[!is.na(om3$event), ]
NROW(om3)
```

```{r}
summary(om3)
```
```{r}
om3$time <- as.factor(om3$time)
summary(om3)
```
### Binomial regression with glm

logistic regression

```{r cloglog}
fit.glm <- glm(event ~ sex + civ + region + time 
               , family = binomial(link=cloglog)
               , data = om3)
summary(fit.glm)
```

### Survival analysis with `coxreg`

```{r}
om3$exit <- as.numeric(as.character(om3$time))
om3$enter <- om3$exit - 0.1

cap = "Old age mortality, discrete time analysis"

fit.ML <- coxreg(Surv(enter, exit, event) ~ sex + civ + region
                 , method = "ml", data = om3, coxph = FALSE)
summary(fit.ML)
```
```{r}
fit2.glm <- glm(event ~ (sex + civ + region) * time
                , family = binomial(link=cloglog)
                , data = om3)
drop1(fit2.glm, test = "Chisq")
```


